{"contractName":"MultiSend","abi":[{"constant":false,"inputs":[{"name":"transactions","type":"bytes"}],"name":"multiSend","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x608060405234801561001057600080fd5b506101c8806100206000396000f3fe608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680638d80ff0a14610046575b600080fd5b34801561005257600080fd5b5061010c6004803603602081101561006957600080fd5b810190808035906020019064010000000081111561008657600080fd5b82018360208201111561009857600080fd5b803590602001918460018302840111640100000000831117156100ba57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061010e565b005b805160205b81811015610197578083015160208201840151604083018501516080840186015160a0850187016000856000811461015257600181146101625761016d565b6000808585888a5af1915061016d565b6000808585895af491505b50600081141561017c57600080fd5b602080601f8501040260a00187019650505050505050610113565b50505056fea165627a7a72305820605913373996128b074da6f535decacf0da9f1c2870bb87551f0b37c625cb4660029","deployedBytecode":"0x608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680638d80ff0a14610046575b600080fd5b34801561005257600080fd5b5061010c6004803603602081101561006957600080fd5b810190808035906020019064010000000081111561008657600080fd5b82018360208201111561009857600080fd5b803590602001918460018302840111640100000000831117156100ba57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061010e565b005b805160205b81811015610197578083015160208201840151604083018501516080840186015160a0850187016000856000811461015257600181146101625761016d565b6000808585888a5af1915061016d565b6000808585895af491505b50600081141561017c57600080fd5b602080601f8501040260a00187019650505050505050610113565b50505056fea165627a7a72305820605913373996128b074da6f535decacf0da9f1c2870bb87551f0b37c625cb4660029","sourceMap":"253:1431:16:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;253:1431:16;;;;;;;","deployedSourceMap":"253:1431:16:-;;;;;;;;;;;;;;;;;;;;;;;;695:987;;8:9:-1;5:2;;;30:1;27;20:12;5:2;695:987:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;695:987:16;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;695:987:16;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;695:987:16;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;695:987:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;695:987:16;;;;;;;;;;;;;;;;;;;877:12;871:19;912:4;929:737;943:6;940:1;937:13;929:737;;;1014:1;1000:12;996:20;990:27;1075:4;1072:1;1068:12;1054;1050:31;1044:38;1143:4;1140:1;1136:12;1122;1118:31;1112:38;1216:4;1213:1;1209:12;1195;1191:31;1185:38;1277:4;1274:1;1270:12;1256;1252:31;1315:1;1340:9;1372:1;1367:66;;;;1455:1;1450:67;;;;1333:184;;1367:66;1429:1;1426;1414:10;1408:4;1401:5;1397:2;1392:3;1387:44;1376:55;;1367:66;;1450:67;1513:1;1510;1498:10;1492:4;1488:2;1483:3;1470:45;1459:56;;1333:184;;1549:1;1540:7;1537:14;1534:2;;;1564:1;1561;1554:12;1534:2;1645:4;1638;1631;1619:10;1615:21;1611:32;1607:43;1601:4;1597:54;1594:1;1590:62;1585:67;;955:711;;;;;;929:737;;;843:833;;;:::o","source":"pragma solidity ^0.5.0;\n\n\n/// @title Multi Send - Allows to batch multiple transactions into one.\n/// @author Nick Dodson - <nick.dodson@consensys.net>\n/// @author Gonçalo Sá - <goncalo.sa@consensys.net>\n/// @author Stefan George - <stefan@gnosis.pm>\ncontract MultiSend {\n\n    /// @dev Sends multiple transactions and reverts all if one fails.\n    /// @param transactions Encoded transactions. Each transaction is encoded as a \n    ///                     tuple(operation,address,uint256,bytes), where operation \n    ///                     can be 0 for a call or 1 for a delegatecall. The bytes \n    ///                     of all encoded transactions are concatenated to form the input.\n    function multiSend(bytes memory transactions)\n        public\n    {\n        // solium-disable-next-line security/no-inline-assembly\n        assembly {\n            let length := mload(transactions)\n            let i := 0x20\n            for { } lt(i, length) { } {\n                let operation := mload(add(transactions, i))\n                let to := mload(add(transactions, add(i, 0x20)))\n                let value := mload(add(transactions, add(i, 0x40)))\n                let dataLength := mload(add(transactions, add(i, 0x80)))\n                let data := add(transactions, add(i, 0xa0))\n                let success := 0\n                switch operation \n                case 0 { success := call(gas, to, value, data, dataLength, 0, 0) }\n                case 1 { success := delegatecall(gas, to, data, dataLength, 0, 0) }\n                if eq(success, 0) { revert(0, 0) }\n                i := add(i, add(0xa0, mul(div(add(dataLength, 0x1f), 0x20), 0x20)))\n            }\n        }\n    }\n}\n","compiler":{"name":"solc","version":"0.5.0+commit.1d4f565a.Emscripten.clang"},"networks":{"1":{"links":{},"events":{},"address":"0xe74d6af1670fb6560dd61ee29eb57c7bc027ce4e","updated_at":1551107687770},"4":{"links":{},"events":{},"address":"0xe74d6af1670fb6560dd61ee29eb57c7bc027ce4e","updated_at":1551107687788},"42":{"links":{},"events":{},"address":"0xe74d6af1670fb6560dd61ee29eb57c7bc027ce4e","updated_at":1551107687806}},"schemaVersion":"2.0.1","updatedAt":"2019-02-25T15:14:47.167Z"}